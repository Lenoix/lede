#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2019 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
# 

name: OpenWrt-CI-01-miwifi-mini-beta

on:
  schedule:
    - cron: 0 3 * * 2,5
  push:
    tags:
      - '*'

jobs:

  build_openwrt:

    name: Build OpenWrt and release Rpi3 test
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3.5 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget swig rsync
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          df -h
      - name: Update feeds
        run: |
          sed -i 's/\"#src-git\"/\"src-git\"/g' ./feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a
      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config
          #
          # ========================固件定制部分========================
          # 
          # 
          # 如果不对本区块做出任何编辑, 则生成默认配置固件. 
          # 
          # 以下为定制化固件选项和说明:
          #
          #
          # 有些插件/选项是默认开启的, 如果想要关闭, 请参照以下示例进行编写:
          # 
          #          =========================================
          #         |  # 取消编译VMware镜像:                   |
          #         |  cat >> .config <<EOF                   |
          #         |  # CONFIG_VMDK_IMAGES is not set        |
          #         |  EOF                                    |
          #          =========================================
          #
          # 
          # 以下是一些提前准备好的一些插件选项.
          # 直接取消注释相应代码块即可应用. 不要取消注释代码块上的汉字说明.
          # 如果不需要代码块里的某一项配置, 只需要删除相应行.
          #
          # 如果需要其他插件, 请按照示例自行添加.
          # 注意, 只需添加依赖链顶端的包. 如果你需要插件 A, 同时 A 依赖 B, 即只需要添加 A.
          # 
          # 无论你想要对固件进行怎样的定制, 都需要且只需要修改 EOF 回环内的内容.
          # 
          cat >> .config <<EOF
          CONFIG_TARGET_ramips=y
          CONFIG_TARGET_ramips_mt7620=y
          CONFIG_TARGET_ramips_mt7620_DEVICE_xiaomi_miwifi-mini=y
          CONFIG_PACKAGE_6in4=y
          CONFIG_PACKAGE_UnblockNeteaseMusicGo=y
          CONFIG_PACKAGE_adbyby=m
          CONFIG_PACKAGE_boost=y
          CONFIG_PACKAGE_boost-date_time=y
          CONFIG_PACKAGE_boost-program_options=y
          CONFIG_PACKAGE_boost-system=y
          CONFIG_PACKAGE_dnsmasq_full_dhcpv6=y
          CONFIG_PACKAGE_frpc=m
          CONFIG_PACKAGE_frps=m
          CONFIG_PACKAGE_haproxy=m
          CONFIG_PACKAGE_ip6tables=y
          CONFIG_PACKAGE_ipt2socks=y
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_iwinfo=y
          CONFIG_PACKAGE_kmod-fast-classifier=m
          CONFIG_PACKAGE_kmod-ipt-nat6=y
          CONFIG_PACKAGE_kmod-iptunnel=y
          CONFIG_PACKAGE_kmod-iptunnel4=y
          CONFIG_PACKAGE_kmod-mii=y
          CONFIG_PACKAGE_kmod-nf-nat6=y
          CONFIG_PACKAGE_kmod-shortcut-fe=m
          CONFIG_PACKAGE_kmod-sit=y
          CONFIG_PACKAGE_kmod-usb-net=y
          CONFIG_PACKAGE_kmod-usb-net-cdc-ether=y
          CONFIG_PACKAGE_kmod-usb-net-rndis=y
          CONFIG_PACKAGE_libatomic=m
          CONFIG_PACKAGE_libcap=y
          CONFIG_PACKAGE_libevent2=y
          CONFIG_PACKAGE_libltdl=m
          CONFIG_PACKAGE_liblua5.3=m
          CONFIG_PACKAGE_libncurses=m
          CONFIG_PACKAGE_libreadline=m
          CONFIG_PACKAGE_libstdcpp=y
          CONFIG_PACKAGE_libusb-1.0=y
          CONFIG_PACKAGE_libuv=y
          CONFIG_PACKAGE_libwebsockets-full=y
          CONFIG_PACKAGE_luci-app-adbyby-plus=m
          CONFIG_PACKAGE_luci-app-frpc=m
          CONFIG_PACKAGE_luci-app-frps=m
          CONFIG_PACKAGE_luci-app-guest-wifi=y
          CONFIG_PACKAGE_luci-app-haproxy-tcp=m
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_fuse-utils is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-ng is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-webui is not set
          CONFIG_PACKAGE_luci-app-sfe=m
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Redsocks2=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_Trojan=y
          CONFIG_PACKAGE_luci-app-ssr-plus_INCLUDE_V2ray=y
          CONFIG_PACKAGE_luci-app-travelmate=y
          CONFIG_PACKAGE_luci-app-ttyd=y
          CONFIG_PACKAGE_luci-i18n-adbyby-plus-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-frpc-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-frps-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-guest-wifi-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-haproxy-tcp-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-sfe-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-ttyd-zh-cn=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_odhcp6c=y
          CONFIG_PACKAGE_odhcp6c_ext_cer_id=0
          CONFIG_PACKAGE_odhcpd-ipv6only=y
          CONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0
          CONFIG_PACKAGE_redsocks2=y
          CONFIG_PACKAGE_terminfo=m
          CONFIG_PACKAGE_travelmate=y
          CONFIG_PACKAGE_trojan=y
          CONFIG_PACKAGE_ttyd=y
          CONFIG_PACKAGE_usb-modeswitch=y
          CONFIG_PACKAGE_usbutils=y
          CONFIG_PACKAGE_v2ray=y
          CONFIG_UnblockNeteaseMusic_Go=y
          CONFIG_V2RAY_COMPRESS_GOPROXY=y
          CONFIG_V2RAY_COMPRESS_UPX=y
          CONFIG_V2RAY_DISABLE_NONE=y
          CONFIG_V2RAY_EXCLUDE_ASSETS=y
          CONFIG_V2RAY_EXCLUDE_V2CTL=y
          CONFIG_V2RAY_JSON_INTERNAL=y
          CONFIG_boost-compile-visibility-hidden=y
          CONFIG_boost-runtime-shared=y
          CONFIG_boost-static-and-shared-libs=y
          CONFIG_boost-variant-release=y   
          EOF
          # 取消编译VMware镜像以及镜像填充 (不要删除被缩进的注释符号):
          # cat >> .config <<EOF
          # # CONFIG_TARGET_IMAGES_PAD is not set
          # # CONFIG_VMDK_IMAGES is not set
          # EOF
          # 
          # ========================固件定制部分结束========================
          # 
          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
      - name: Make download
        run: |
          make download -j8
          find dl -size -1024c -exec rm -f {} \;
      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
          du -h --max-depth=1 ./build_dir
          du -h --max-depth=1 ./bin
      - name: Prepare artifact
        run: find ./bin/targets/ -type d -name "packages" | xargs rm -rf {}

      - name: Upload artifact
        uses: actions/upload-artifact@main
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: Create release
        if: github.event == 'push'
        id: create_release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          draft: false
          prerelease: false      

      - name: Upload release asset
        if: github.event == 'push'
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./bin/targets/*/*/

